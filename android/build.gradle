// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    // Define global versions in ext block for reuse across modules
    ext {
        // Kotlin
        kotlin_version = '1.9.20'
        coroutines_version = '1.7.3'
        
        // Android Gradle Plugin
        agp_version = '8.1.3'
        
        // Google Services
        google_services_version = '4.4.0'
        firebase_crashlytics_version = '2.9.9'
        
        // Testing
        junit_version = '4.13.2'
        espresso_version = '3.5.1'
        
        // AndroidX
        core_ktx_version = '1.12.0'
        appcompat_version = '1.6.1'
        material_version = '1.10.0'
        constraint_layout_version = '2.1.4'
        lifecycle_version = '2.6.2'
        navigation_version = '2.7.4'
        compose_version = '1.5.4'
        
        // Firebase BOM version
        firebase_bom_version = '32.5.0'
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // Android Gradle Plugin
        classpath "com.android.tools.build:gradle:$agp_version"
        
        // Kotlin Gradle Plugin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        
        // Google Services Plugin (for Firebase)
        classpath "com.google.gms:google-services:$google_services_version"
        
        // Firebase Crashlytics Gradle Plugin
        classpath "com.google.firebase:firebase-crashlytics-gradle:$firebase_crashlytics_version"
    }
}

// All projects configuration
allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    
    // Configure Java compatibility for all modules
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    
    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

// Task to clean the build directory
tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
